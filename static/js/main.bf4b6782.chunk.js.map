{"version":3,"sources":["assets/images/Spin.svg","components/common/Preloader/Preloader.module.css","assets/images/React-icon.png","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Header/Header.jsx","api/api.js","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","hoc/withAuthRedirect.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/Login/Login.jsx","redux/app-reducer.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","components/Dialogs/Dialogitem/Dialogitem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js","components/common/FormControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","assets/images/photo.png","components/common/paginator/Paginator.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Header","props","className","s","header","src","alt","loginBlock","isAuth","login","onClick","logaut","to","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","data","unfollow","id","delete","follow","post","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","captchaUrl","setAuthUserData","type","payload","getCaptchaUrlSucces","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","url","authReducer","state","action","HeaderContainer","this","React","Component","connect","auth","Navbar","nav","item","activeClassName","active","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFollowingProgress","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","pageNumber","key","e","User","user","userWrapper","photos","small","userPhoto","usersPhoto","disabled","some","name","Users","Preloader","preloader","mapStateToPropsForRedirect","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","requestUsers","compose","bind","page","totalCount","Element","input","meta","touched","error","hasError","formControl","createField","plaseholder","validators","component","text","Field","placeholder","validate","required","value","undefined","maxLengthCreator","maxLength","length","LoginReduxForm","reduxForm","form","handleSubmit","Input","onSubmit","formSammaryError","message","messages","stopSubmit","_error","log","initialized","appReducer","posts","setStatus","getUserProfile","profileReducer","newPost","newPostText","likesCount","postId","dialogs","dialogsReducer","newMessageBody","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","__store__","withSuspense","Suspense","fallback","DialogItem","path","dialog","Message","maxLength100","AddMessageFormRedux","Textarea","Dialogs","dialogsElement","d","messagesElements","m","dialogsItems","values","sendMessage","sendMessageCreator","RedirectComponent","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","onBlur","autoFocus","ProfileDataRedaxForm","description","style","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAGob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","avatar","large","photo","target","files","initialValues","then","Posts","blockPost","likeCount","MyPosts","memo","postsElement","postsBlock","AddMyPostsFormRedux","addPost","maxLength10","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","title","getState","Promise","reject","withRouter","App","initializedApp","exact","render","DialogsContainer","UsersContainer","ReactPhoto","AppContainer","promise","all","MyJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf4b6782.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spin.1336a69b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1yHYn\"};","module.exports = __webpack_public_path__ + \"static/media/React-icon.31987a52.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2xKqi\",\"item\":\"Navbar_item__15XME\",\"active\":\"Navbar_active__bEgna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2H2OL\",\"dialogsItems\":\"Dialogs_dialogsItems__3kRDL\",\"active\":\"Dialogs_active__10YjM\",\"messages\":\"Dialogs_messages__1Fy6S\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport s from './Header.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n      <header className={s.header}>\n        <img src='http://pngimg.com/uploads/owl/owl_PNG45.png' alt=\"logo\"/>\n\n        <div className={ s.loginBlock }>\n          { props.isAuth \n          ? <div> {props.login} - <button onClick={props.logaut}>Log aut</button> </div>\n          : <NavLink to='/login'>Login</NavLink> }\n          \n        </div>\n      </header>\n    );\n};\n\nexport default Header;\n","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f9529b93-30b8-4394-b072-ee0546f292c2\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage = 1, pageSize = 10) {\r\n        const response = await instance.get(`users?page=${currentPage}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n    async unfollow(id) {\r\n        const response = await instance.delete(`follow/${id}`);\r\n        return response.data;\r\n    },\r\n    async follow(id) {\r\n        const response = await instance.post(`follow/${id}`);\r\n        return response.data;\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n        // return instance.get(`profile/${userId}`)\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    // async getMe() {\r\n    //     const response = await instance.get(`auth/me`);\r\n    //     return response.data;\r\n    // },\r\n    getMe(){\r\n       return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logaut() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n       return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n","import { authAPI, securityAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst   SET_USER_DATA = 'SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\n\n\nlet initialState = {\n  \n  userId: null,\n  login: null,\n  email: null,\n  isAuth: false,\n  captchaUrl: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case GET_CAPTCHA_URL_SUCCESS:\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state;\n  }\n\n}\n\n//ac\nexport const setAuthUserData = (userId, login, email, isAuth) => ({ type: SET_USER_DATA, payload: { userId, login, email, isAuth } });\nexport const getCaptchaUrlSucces = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\n\n//thunk\nexport const getAuthUserData = () => async (dispatch) => {\n  const response = await authAPI.getMe()  \n    if(response.data.resultCode === 0) {\n      let {id, login, email} = response.data.data;\n      dispatch(setAuthUserData(id, login, email, true));\n    }\n};\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n  const response = await authAPI.login(email, password, rememberMe, captcha);\n  if(response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    if(response.data.resultCode === 10){\n      dispatch(getCaptchaUrl());\n    }\n    const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\n    dispatch(stopSubmit('contact', {_error: message}))\n  }\n};\n\nexport const getCaptchaUrl = () => async dispatch => {\n  const response = await securityAPI.getCaptchaUrl();\n  const captchaUrl =  response.data.url;\n  dispatch(getCaptchaUrlSucces(captchaUrl));\n};\n\nexport const logaut = () => async (dispatch) => {\n  const response = await authAPI.logaut();\n  if(response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n\n\nexport default authReducer;\n","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logaut } from '../../redux/auth-reducer';\n// import { authAPI } from '../../api/api';\n\nclass HeaderContainer extends React.Component {\n\n  render() {\n    return <Header { ...this.props } />\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logaut})(HeaderContainer);\n","import React from 'react';\nimport s from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav className={s.nav}>\n      <div className={`${s.item}`}>\n        <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar;\n","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\n\n\nlet initialState = {\n  \n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\n        // users: state.users.map(u => u) && users: [...state.users] - записи идентичны\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return {...u, followed: true}\n        //   }\n        //   return u;\n        // })\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\n        // users: state.users.map(u => u) && users: [...state.users] - записи идентичны\n        // users: state.users.map(u => {\n        //   if (u.id === action.userId) {\n        //     return {...u, followed: false}\n        //   }\n        //   return u;\n        // })\n      }\n    case SET_USERS: {\n      return {...state, users: action.users}\n    }\n    case SET_CURRENT_PAGE: {\n      return {...state, currentPage: action.currentPage}\n    }\n    case SET_TOTAL_USERS_COUNT: {\n      return {...state, totalUsersCount: action.count}\n    }\n    case TOGGLE_IS_FETCHING: {\n      return {...state, isFetching: action.isFetching}\n    }\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n        ? [...state.followingInProgress, action.userId]\n        : state.followingInProgress.filter(id=>id!==action.userId)\n      }\n    }\n    default:\n      return state;\n  }\n\n}\n          // followActionCreator\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\n//thunk\nexport const requestUsers = (page = 1, pageSize) => {//создатель санки\n  return async (dispatch) => {\n    dispatch(toggleIsFetching(true));//диспатчим экшен-крейтер\n    dispatch(setCurrentPage(page));\n\n    const data = await usersAPI.getUsers(page, pageSize);\n    \n    dispatch(toggleIsFetching(false)); //диспатчим экшен-крейтер\n    dispatch(setUsers(data.items));//диспатчим экшен-крейтер\n    dispatch(setTotalUsersCount(data.totalCount));//диспатчим экшен-крейтер\n  }\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleIsFollowingProgress(true, userId));\n  const data = await apiMethod(userId);\n  if (data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleIsFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => {//создатель санки\n  return async (dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n  }\n};\nexport const unfollow = (userId) => {//создатель санки\n  return async (dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n  }\n};\n\nexport default usersReducer;\n","import React from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport { useState } from 'react';\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    const pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}>{p}</span>\r\n           })}\r\n           { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/photo.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n        <div className={styles.userWrapper}>\r\n            <div className={styles.item}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={styles.usersPhoto} alt=\"avatar\" />\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                            onClick={() => {unfollow(user.id);}}>Unfollow</button>\r\n                    : <button disabled={ followingInProgress\r\n                        .some(id => id===user.id) }\r\n                            onClick={() => { follow(user.id);}}>Follow</button>}\r\n            </div>\r\n            <div className={styles.item}>\r\n                <div>\r\n                    <div><b>{user.name}</b></div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../common/paginator/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n            { props.users.map(u => <User user={u}\r\n                                        key={u.id}\r\n                                        followingInProgress={props.followingInProgress}\r\n                                        unfollow={props.unfollow}\r\n                                        follow={props.follow} />)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport preloader from './../../../assets/images/Spin.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return <img src={preloader} className={styles.preloader} alt='preloader'/>\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","export const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsers } from '../../redux/users-selectors';\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={ this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    />\r\n        </>\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    // withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        requestUsers\r\n    }),\r\n)(UsersAPIComponent);\r\n","import React from 'react';\r\nimport s from './FormControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error;\r\n//   return (\r\n//     <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n//       <div>\r\n//         <textarea {...input} {...props} />\r\n//       </div>\r\n//     {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n//   const hasError = meta.touched && meta.error;\r\n//   return (\r\n//     <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n//       <div>\r\n//         <input {...input} {...props} />\r\n//       </div>\r\n//     {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n//HOC\r\nexport const Element = Element => ({input, meta, ...props}) => {\r\n  const {touched, error} = meta\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n      <div>\r\n        <Element {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport const createField = (plaseholder, name, validators, component, props = {}, text = '') => (\r\n  <div>\r\n    <Field placeholder={plaseholder} name={name} component={component} validate={validators} {...props}/> {text}\r\n  </div>\r\n)\r\n","export const required = value => {\r\n  return (value) ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if(value.length > maxLength) return `Max length is ${maxLength} simbols`;\r\n  return undefined;\r\n}","import React from 'react';\r\nimport { reduxForm } from 'redux-form'\r\nimport { Element, createField } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './../common/FormControls/FormControls.module.css';\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    const Input = Element('input')\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                {createField('login', 'email', [required], Input)}\r\n                {createField('password', 'password', [required], Input, {type: 'password'})}\r\n                {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n                { captchaUrl && <img src={captchaUrl} /> }\r\n                { captchaUrl && createField('Simbols from image', 'captcha', [required], Input) }\r\n                {error && <div className={s.formSammaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'contact' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />;\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state;\n  }\n\n}\n        \nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializedApp = () => (dispatch) => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => dispatch(initializedSuccess()));\n}\n\nexport default appReducer;\n","import { usersAPI, profileAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n  \n  posts: [\n    // {id: 1, message: 'Hi! How are you?', likesCount: 15},\n    // {id: 2, message: 'I am fine!', likesCount: 25},\n    // {id: 3, message: 'Bla-bla!', likesCount: 12},\n    // {id: 4, message: 'Da-da!', likesCount: 27}\n  ],\n  profile: null,\n  status: '',\n\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ADD_POST: {\n      const newPost = {\n        id: 5,\n        message: action.newPostText,\n        likesCount: 0\n      }\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n      };\n    }\n    case SET_USER_PROFILE: {\n      return {\n        ...state,\n        profile: action.profile\n      };\n    }\n    case SET_STATUS: {\n      return {\n        ...state,\n        status: action.status\n      };\n    }\n    case DELETE_POST: {\n      return {\n        ...state,\n        posts: [...state.posts.filter(p => p.id !== action.postId)]\n      };\n    }\n    case SAVE_PHOTO_SUCCESS: {\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photos}\n      };\n    }\n    default:\n      return state;\n  }\n\n}\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n  try {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n  } catch(error) {\n    return;\n  }\n};\nexport const getStatus = (userId) => async (dispatch) => {\n  try {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n  } catch(error) {\n    return;\n  }\n};\nexport const updateStatus = (status) => async (dispatch) => {\n  try {\n    const response = await profileAPI.updateStatus(status);\n    if(response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  } catch(error) {\n    return;\n  }\n};\nexport const savePhoto = (title) => async (dispatch) => {\n  const response = await profileAPI.savePhoto(title);\n  if(response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n  if(response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\n    return Promise.reject(response.data.messages[0]);\n  }\n};\n\n\n\nexport default profileReducer;\n","\nconst SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n  \n  dialogs: [\n    {id: 1, name: 'Andrey'},\n    {id: 2, name: 'Dima'},\n    {id: 3, name: 'Sveta'},\n    {id: 4, name: 'Valera'},\n    {id: 5, name: 'Victor'},\n    {id: 6, name: 'Sasha'}\n  ],\n\n  messages: [\n    {id: 1, message: 'Hi'},\n    {id: 2, message: 'How are you'},\n    {id: 3, message: 'Yo'},\n    {id: 4, message: 'Yo'},\n    {id: 5, message: 'Yo'},\n    {id: 6, message: 'Yo'}\n  ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n  switch(action.type) {\n    \n    case SEND_MESSAGE:\n      let message = action.newMessageBody;\n      return {\n        ...state,\n        messages: [...state.messages, {id: 7, message}]\n      };\n    default:\n      return state;\n  }\n  \n}\n\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\n\nexport default dialogsReducer;\n","let initialState =  {\r\n\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleWare from \"redux-thunk\";// импортируем thunk под именем thunkMiddleWare\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //crome redux-tools\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare))); //crome redux-tools\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare));//applyMiddleware- прими промежуточные слои\nwindow.__store__ = store;\n\nexport default store;\n","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    \r\n\r\n    return props => {\r\n        return <React.Suspense fallback={<Preloader />} >\r\n                    <Component {...props} />\r\n                </React.Suspense>\r\n    };\r\n}\r\n","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = '/dialogs/' + props.id;\n  return (\n    <div className={`${s.dialog} ${s.active}`}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n  \n  return (\n    <div className={s.message}>{props.message}</div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './Dialogitem/Dialogitem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form'\nimport { Element } from '../common/FormControls/FormControls';\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\n\nconst Dialogs = (props) => {\n  let  state = props.dialogsPage;\n  let dialogsElement = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n  let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id} id={m.id} />);\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  if(!props.isAuth) return <Redirect to={'/login'} />\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        { dialogsElement }\n      </div>\n      <div className={s.messages}>\n        <div>{ messagesElements }</div>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n}\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n  const Textarea = Element('textarea');\n  return (\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field name='newMessageBody' component={Textarea} validate={[required, maxLength100]}  placeholder='Enter Your message' />\n        </div>\n        <div>\n          <button>Add Post</button>\n        </div>\n      </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;\n","import React from 'react';\nimport {sendMessageCreator} from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n// import StoreContext from '../../storeContext';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div>\r\n      }\r\n      { editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { createField, Element } from '../../common/FormControls/FormControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from './../../../components/common/FormControls/FormControls.module.css'\r\n\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  const Input = Element('input');\r\n  const Textarea = Element('textarea');\r\n  return (\r\n    <form className={s.description} onSubmit={handleSubmit}>\r\n      <div><button>save</button></div>\r\n      {error && <div className={style.formSammaryError}>\r\n          {error}\r\n        </div>}\r\n      <div>\r\n        <b>Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b>: { createField('My professional skills', 'lookingForAJobDescription', [], Textarea) }\r\n      </div>\r\n      <div>\r\n        <b>About me</b>: { createField('About me', 'aboutMe', [], Textarea) }\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n          return <div key={key} className={s.contact}>\r\n            <b>{key}: </b>{createField(key, `contacts.${key}`, [], Input)}\r\n          </div>\r\n        })}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ProfileDataRedaxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataRedaxForm;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport photo from '../../../assets/images/photo.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n// import ReactPhoto from '../../../assets/images/React-icon.png';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n    if(e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n    return (\r\n      <div>\r\n        {/* <div className={s.way}>\r\n          <img src={ReactPhoto} alt=\"img\"/>\r\n        </div> */}\r\n        <div className={s.avatar}>\r\n          <div>\r\n            <img src={profile.photos.large || photo} alt=\"img\"/>\r\n            <div>\r\n              {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            {editMode\r\n              ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n              : <ProfileData goToEditMode={() => {setEditMode(true)}} isOwner={isOwner} profile={profile} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <div className={s.description}>\r\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAGob &&\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={s.contact}>\r\n    <b>{contactTitle}</b>: {contactValue}\r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\nimport s from './Posts.module.css';\n\nconst Posts = (props) => {\n  console.log(props.message);\n    return (\n          <div className={s.item}>\n            <div className={s.blockPost}>\n              <img src='https://toppng.com/uploads/preview/batman-icon-jira-avatar-11562897771zvwv8r510z.png' alt='avatar'/>\n              { props.message }\n            </div>\n            <div className={s.likesCount}>\n              <span>{ props.likeCount }</span><img src=\"http://pngimg.com/uploads/like/like_PNG84.png\" alt=\"like\"/>\n            </div>\n          </div>\n    );\n};\n\nexport default Posts;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Posts from './Post/Posts';\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Element } from '../../common/FormControls/FormControls';\n\nconst MyPosts = React.memo((props) => {\n\n  let postsElement = props.posts.map((p) => <Posts message={p.message} likeCount={p.likesCount} />);\n\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n    return (\n      <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <AddMyPostsFormRedux onSubmit={onAddPost} />\n        <div className={s.posts}>\n          { postsElement }\n        </div>\n      </div>\n    );\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostsForm = (props) => {\n  const Textarea = Element('textarea');\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='newPostText' validate={[required, maxLength10]} component={Textarea} placeholder='Enter Your post' />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMyPostsFormRedux = reduxForm({form: 'ProfileAddNewPostsForm'})(AddNewPostsForm);\n\nexport default MyPosts;\n","import React from 'react';\nimport MyPosts from './MyPosts';\nimport {addPostActionCreator} from './../../../redux/profile-reducer';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\n// import s from './Profile.module.css';\n// import MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n    return (\n      <div>\n        <ProfileInfo isOwner={props.isOwner}\n                    profile={ props.profile }\n                    status={props.status}\n                    updateStatus={props.updateStatus}\n                    savePhoto={props.savePhoto}\n                    saveProfile={props.saveProfile} />\n        <MyPostsContainer />\n      </div>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, updateStatus, getStatus, savePhoto, saveProfile } from '../../redux/profile-reducer';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if(!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    \n    return (\n      <Profile { ...this.props }\n              profile={ this.props.profile }\n              status={this.props.status}\n              updateStatus={this.props.updateStatus}\n              isOwner={!this.props.match.params.userId}\n              savePhoto={this.props.savePhoto}\n              saveProfile={this.props.saveProfile} />\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n  withRouter,\n  // withAuthRedirect\n)(ProfileContainer);\n","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, HashRouter, Redirect, Switch, BrowserRouter } from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializedApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { withSuspense } from './hoc/withSuspense';\r\nimport ReactPhoto from './assets/images/React-icon.png';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\n// const DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n// const ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializedApp();\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar className='navBar' />\r\n        <div className='app-wrapper-content'>\r\n          <Switch>\r\n            <Route exact path='/' render={() => <Redirect to='/profile'/> }/>\r\n            <Route path='/dialogs' render={ withSuspense(DialogsContainer) }/>\r\n            <Route path='/profile/:userId?' render={ withSuspense(ProfileContainer) }/>\r\n            <Route path='/news' render={ () => <News /> }/>\r\n            <Route path='/music' render={ () => <Music /> }/>\r\n            <Route path='/settings' render={ () => <Settings /> }/>\r\n            <Route path='/users' render={() => <UsersContainer />} />\r\n            <Route path='/login' render={() => <LoginPage />} />\r\n          </Switch>\r\n          <div className='way'>\r\n            <img src={ReactPhoto} alt=\"img\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\n// export default compose(\r\n//   withRouter,\r\n//   connect(mapStateToProps, {initializedApp}))(App);\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializedApp}))(App);\r\n\r\nconst MyJSApp = (props) => {\r\n  return <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n          </HashRouter>\r\n}\r\n\r\nexport default MyJSApp;\r\n","import * as serviceWorker from './serviceWorker';\n// import store from './redux/redux-store';\n// import { rerenderEntireTree } from './render';\n// import { BrowserRouter } from 'react-router-dom';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyJSApp from './App';\n// import App from './App';\n// import StoreContext from './storeContext';\n// import {Provider} from 'react-redux';\n\n\n\n\nReactDOM.render(<MyJSApp />, document.getElementById('root'));\n        \n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__10fvL\",\"error\":\"FormControls_error__KmRjm\",\"formSammaryError\":\"FormControls_formSammaryError__hCrZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3db7F\",\"item\":\"ProfileInfo_item__1Smry\",\"contact\":\"ProfileInfo_contact__27xyW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__1j7BB\",\"cursorPointer\":\"Users_cursorPointer__1LPW4\",\"userWrapper\":\"Users_userWrapper__Rh9jJ\"};","module.exports = __webpack_public_path__ + \"static/media/photo.67d30f6f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3ycK2\",\"pageNumber\":\"Paginator_pageNumber__2ONMm\",\"selectedPage\":\"Paginator_selectedPage__3BCtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockPost\":\"Posts_blockPost__3BvhH\",\"likesCount\":\"Posts_likesCount__2yvWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3YDhX\",\"loginBlock\":\"Header_loginBlock__2-Wcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3Ld_J\",\"postsBlock\":\"MyPosts_postsBlock__eXSfj\",\"way\":\"MyPosts_way__3ymh5\",\"posts\":\"MyPosts_posts__2Cn8s\",\"avatar\":\"MyPosts_avatar__1P5NN\",\"item\":\"MyPosts_item__1cUMx\"};"],"sourceRoot":""}