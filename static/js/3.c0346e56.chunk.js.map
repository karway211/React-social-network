{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","way","src","alt","avatar","photos","large","photo","description","Preloader","Posts","console","log","message","item","likeCount","MyPosts","React","memo","postsElement","posts","map","p","likesCount","postsBlock","AddMyPostsFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","Textarea","Element","handleSubmit","Field","name","validate","required","component","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c0346e56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"way\":\"ProfileInfo_way__1X5hF\",\"avatar\":\"ProfileInfo_avatar__3db7F\",\"item\":\"ProfileInfo_item__1Smry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3Ld_J\",\"postsBlock\":\"MyPosts_postsBlock__eXSfj\",\"way\":\"MyPosts_way__3ymh5\",\"posts\":\"MyPosts_posts__2Cn8s\",\"avatar\":\"MyPosts_avatar__1P5NN\",\"item\":\"MyPosts_item__1cUMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__3k5Lp\"};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div>\r\n      }\r\n      { editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport photo from '../../../assets/images/photo.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if(!profile) {\r\n    return <Preloader />\r\n  }\r\n    return (\r\n      <div>\r\n        <div className={s.way}>\r\n          <img src=\"https://st2.depositphotos.com/1046670/5401/i/450/depositphotos_54014113-stock-photo-eagle.jpg\" alt=\"img\"/>\r\n        </div>\r\n        <div className={s.avatar}>\r\n          <img src={profile.photos.large || photo} alt=\"img\"/>\r\n          <div className={s.description}>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\nimport s from './Posts.module.css';\n\nconst Posts = (props) => {\n  console.log(props.message);\n    return (\n          <div className={s.item}>\n            <img src='https://hornews.com/images/news_large/c1d4b2b8ec608ea72764c5678816d5c9.jpg' alt='avatar'/>\n            { props.message }\n            <div>\n              <span>{ props.likeCount }</span>\n            </div>\n          </div>\n    );\n};\n\nexport default Posts;\n","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Posts from './Post/Posts';\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Element } from '../../common/FormControls/FormControls';\n\nconst MyPosts = React.memo((props) => {\n\n  let postsElement = props.posts.map((p) => <Posts message={p.message} likeCount={p.likesCount} />);\n\n  const onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n    return (\n      <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <AddMyPostsFormRedux onSubmit={onAddPost} />\n        <div className={s.posts}>\n          { postsElement }\n        </div>\n      </div>\n    );\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostsForm = (props) => {\n  const Textarea = Element('textarea');\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='newPostText' validate={[required, maxLength10]} component={Textarea} placeholder='Enter Your post' />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  )\n}\n\nconst AddMyPostsFormRedux = reduxForm({form: 'ProfileAddNewPostsForm'})(AddNewPostsForm);\n\nexport default MyPosts;\n","import React from 'react';\nimport MyPosts from './MyPosts';\nimport {addPostActionCreator} from './../../../redux/profile-reducer';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\n// import s from './Profile.module.css';\n// import MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return (\n      <div>\n        <ProfileInfo profile={ props.profile } status={props.status} updateStatus={props.updateStatus} />\n        <MyPostsContainer />\n      </div>\n    );\n};\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, updateStatus, getStatus } from '../../redux/profile-reducer';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if(!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    \n    return (\n      <Profile { ...this.props } profile={ this.props.profile } status={this.props.status} updateStatus={this.props.updateStatus} />\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n  withRouter,\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}